{"version":3,"sources":["Context/CartContext.js","components/CartWidget/CartWidget.js","components/navBar/navBar.js","components/cards/card.js","firebase/index.js","containers/ListContainer.jsx","components/ItemCount/ItemCount.js","components/itemDetail/ItemDetail.jsx","containers/ItemDetailContainer.jsx","components/modal/Modal.js","components/cart/Cart.js","components/AppRouter/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","createContext","CartProvider","children","useState","cart","setCart","totalCant","setTotalCant","totalPrec","setTotalPrec","useEffect","precio","items","item","cantidad","Provider","value","addItem","id","some","newCart","filter","e","newCantidad","find","removeItem","clear","CartWidget","useContext","to","Button","variant","Badge","navBar","className","src","alt","Card","img","title","descripcion","stock","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","firestore","propTypes","PropTypes","string","isRequired","ListContainer","setItems","itemParam","useParams","itemsCollection","collection","where","get","then","snapshot","size","docs","map","doc","data","nombre","ItemCount","initial","onAdd","parseInt","count","setCount","unidades","onClick","prevCount","ItemDetail","contador","ItemDetailContainer","prod","setProd","itemId","res","exists","Formulario","props","name","email","phone","datos","setDatos","handleInputChange","event","target","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","required","type","placeholder","onChange","Footer","db","ordenCol","orden","date","Timestamp","fromDate","Date","buyer","total","cartItem","add","IdDocumento","alert","catch","err","console","log","finally","itemsToUpdate","FieldPath","documentId","p","batch","forEach","docSnapshot","update","ref","commit","generarOrden","onHide","Cart","modalShow","setModalShow","length","Table","striped","bordered","hover","colSpan","show","AppRouter","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39673b65.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext({});\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cart, setCart] = useState([]);\r\n    const [totalCant, setTotalCant] = useState(0);\r\n    const [totalPrec, setTotalPrec] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let precio = 0;\r\n        let items = 0;\r\n        for (let item of cart) {\r\n            items += item.cantidad;\r\n            precio += item.cantidad * item.item.precio;\r\n        }\r\n        setTotalCant(items);\r\n        setTotalPrec(precio);\r\n    }, [cart])\r\n\r\n    const isInCart = (id) => {\r\n        return cart.some(({ item }) => item.id === id);\r\n    }\r\n\r\n    const addItem = (item, cantidad) => {\r\n\r\n\r\n        if (isInCart(item.id)) {\r\n\r\n            let newCart = cart.filter(e => e.item.id !== item.id)\r\n            let newCantidad = cart.find(e => e.item.id === item.id).cantidad + cantidad\r\n\r\n            setCart([...newCart,\r\n            { item, cantidad: newCantidad }])\r\n            return\r\n        }\r\n\r\n        setCart([...cart,\r\n        { item, cantidad }])\r\n    };\r\n\r\n    const clear = () => {\r\n        setCart([])\r\n    }\r\n\r\n    const removeItem = (id) => {\r\n        setCart(cart.filter(({ item }) => item.id !== id));\r\n    };\r\n\r\n    return <CartContext.Provider value={{ cart, addItem, removeItem, clear, totalCant, totalPrec }}>{children}</CartContext.Provider>\r\n}","import Button from 'react-bootstrap/Button'\r\nimport React, { useContext } from \"react\";\r\nimport { CartContext } from \"../../Context/CartContext\";\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport './CartWidget.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst CartWidget = () => {\r\n\r\n    const { totalCant } = useContext(CartContext)\r\n\r\n    return (\r\n        <div>\r\n            { totalCant ?\r\n                <Link to=\"/cart\"><Button variant=\"primary\"> Cart: <Badge variant=\"light\">{totalCant}</Badge></Button></Link>\r\n                : null}\r\n        </div >\r\n    );\r\n};\r\n\r\n\r\nexport default CartWidget;","import React from 'react';\r\nimport './navBar.css';\r\nimport CartWidget from '../CartWidget/CartWidget';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst navBar = () => {\r\n\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"logo\">\r\n                <img src=\"#\" alt=\"Logo\" />\r\n            </div>\r\n            <div className=\"menu\">\r\n                <ul>\r\n                    <li><Link to='/'>Inicio</Link></li>\r\n                    <li><Link to='/juegos/juegos'> Juegos</Link></li>\r\n                    <li><Link to='/accesorios/accesorios'>Accesorios</Link></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"cartWidget\">\r\n                <CartWidget />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default navBar;","import React from 'react';\r\nimport \"./card.css\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Card = ({ id, img, title, descripcion, stock }) => {\r\n\r\n\r\n    return (\r\n        <div className='card bg-dark text-center animate__animated animate__fadeInUp'>\r\n            <div className='card-body text-light'>\r\n                <div className=\"card-title tamanio\">\r\n                    <h4>{title}</h4>\r\n                </div>\r\n                <div className=\"img\">\r\n                    <img src={img} alt=\"img\" className=\"img card-img-top\" />\r\n                </div>\r\n                <p className='card-text text-secondary'>\r\n                    {\r\n                        descripcion ? descripcion : 'Descripción del producto, click en mas infomración para ver el detalle'\r\n                    }\r\n                </p>\r\n                <Button className=\"btn-masInfo\"><Link className=\"btn-link\" to={`/itemDetail/${id}`}> + Información </Link></Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDtePceWSSy4O0o_jxOSLrwFeJkWJpG6as\",\r\n    authDomain: \"ecommercecoder-c8a40.firebaseapp.com\",\r\n    projectId: \"ecommercecoder-c8a40\",\r\n    storageBucket: \"ecommercecoder-c8a40.appspot.com\",\r\n    messagingSenderId: \"89630139725\",\r\n    appId: \"1:89630139725:web:066780653407b721744304\"\r\n});\r\n\r\nexport const getFirebase = () => {\r\n    return app;\r\n}\r\n\r\nexport const getFirestore = () => {\r\n    return firebase.firestore(app);\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../components/cards/card\";\r\nimport \"./ListContainer.css\";\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from \"react-router\";\r\nimport { getFirestore } from \"../firebase\";\r\n\r\n\r\n\r\nconst ListContainer = () => {\r\n    const [items, setItems] = useState([]);\r\n    const { itemParam } = useParams()\r\n\r\n    useEffect(() => {\r\n\r\n        const db = getFirestore();\r\n        const itemsCollection = db.collection('productos')\r\n\r\n        if (itemParam) {\r\n            const filtro = itemsCollection.where('categoria', '==', itemParam)\r\n            const promFilter = filtro.get();\r\n\r\n            promFilter.then((snapshot) => {\r\n                if (snapshot.size > 0) {\r\n                    setItems(snapshot.docs.map(doc => {\r\n                        return { id: doc.id, ...doc.data() }\r\n                    }))\r\n                }\r\n            })\r\n        } else {\r\n            const promise = itemsCollection.get();\r\n            promise.then((snapshot) => {\r\n                if (snapshot.size > 0) {\r\n                    setItems(snapshot.docs.map(doc => {\r\n                        return { id: doc.id, ...doc.data() }\r\n                    }))\r\n                }\r\n            })\r\n        }\r\n    }, [itemParam])\r\n\r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center h-100\">\r\n            <div className=\"row\" >\r\n                {items.map((item) => (\r\n                    <div className=\"col-md-4\" key={item.id}>\r\n                        <Card id={item.id} title={item.nombre} img={item.img} descripcion={item.descripcion} stock={item.stock} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nCard.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    img: PropTypes.string,\r\n    descripcion: PropTypes.string\r\n}\r\n\r\nexport default ListContainer;","import React, { useContext, useState } from \"react\"\r\nimport './ItemCount.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { CartContext } from \"../../Context/CartContext\";\r\n\r\n\r\n\r\nconst ItemCount = ({ item, stock, initial, onAdd }) => {\r\n    const [count, setCount] = useState(parseInt(initial))\r\n    const [unidades] = useState('u')\r\n\r\n    const { addItem } = useContext(CartContext)\r\n\r\n    function decrementCount() {\r\n        if (count > 1) {\r\n            setCount(prevCount => prevCount - 1)\r\n        }\r\n    }\r\n\r\n    function incrementCount() {\r\n        if (count < stock) {\r\n            setCount(prevCount => prevCount + 1)\r\n        }\r\n    }\r\n\r\n    const addItemCart = () => {\r\n        addItem(item, count)\r\n        onAdd(count)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button variant=\"danger\" className=\"btnCards\" onClick={decrementCount}>-</Button>\r\n                <span>  {count}  </span>\r\n                <span>  {unidades}  </span>\r\n                <Button className=\"btnCards\" onClick={incrementCount}>+</Button>\r\n            </div>\r\n            <Button variant=\"success\" className=\"btn-addCart\" onClick={addItemCart}>Agregar al Carrito</Button>\r\n\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default ItemCount;","import React, { useState } from 'react';\r\nimport ItemCount from '../ItemCount/ItemCount';\r\nimport \"./ItemDetail.css\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst ItemDetail = ({ item }) => {\r\n    const [count, setCount] = useState(0)\r\n\r\n    const addHandler = (contador) => {\r\n        setCount(contador)\r\n    }\r\n\r\n    return (\r\n        <div className='card bg-dark text-center animate__animated animate__fadeInUp'>\r\n            <div className='card-body text-light'>\r\n                <div className=\"card-title tamanio\">\r\n                    <h4>{item.nombre}</h4>\r\n                </div>\r\n                <div className=\"img\">\r\n                    <img src={item.img} alt=\"img\" className=\"img card-img-top\" />\r\n                </div>\r\n                <p className='card-text text-secondary'>\r\n                    {\r\n                        item.descripcion ? item.descripcion : 'Descripción del producto, click en mas infomración para ver el detalle'\r\n                    }\r\n                </p>\r\n                <h4>Precio: $ {item.precio}</h4>\r\n                {count === 0 ?\r\n                    <ItemCount item={item} stock={item.stock} initial='1' onAdd={addHandler} />\r\n                    :\r\n                    <Link to='/cart'>\r\n                        <Button variant=\"primary\">Terminar la compra</Button>\r\n                    </Link>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemDetail;","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport ItemDetail from '../components/itemDetail/ItemDetail'\r\nimport { getFirestore } from '../firebase'\r\n\r\nconst getItems = (id) => {\r\n\r\n    const db = getFirestore();\r\n    const itemsCollection = db.collection('productos');\r\n    const prod = itemsCollection.doc(id)\r\n\r\n    return prod.get();\r\n}\r\n\r\nconst ItemDetailContainer = () => {\r\n    const [prod, setProd] = useState([])\r\n    const { itemId } = useParams()\r\n\r\n    useEffect(() => {\r\n        getItems(itemId).then((res) => {\r\n            if (res.exists) {\r\n                setProd({ id: res.id, ...res.data() })\r\n            }\r\n        })\r\n        return;\r\n    }, [itemId])\r\n\r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center h-100\">\r\n            <div className=\"row\" >\r\n                <div className=\"col-md-6\" key={prod.id}>\r\n                    <ItemDetail item={prod} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ItemDetailContainer","import React, { useContext, useState } from 'react';\r\nimport { CartContext } from '../../Context/CartContext';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './Modal.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { getFirestore } from '../../firebase';\r\nimport firebase from 'firebase/app'\r\n\r\nconst generarOrden = (cart, totalPrec, datos) => {\r\n\r\n    const db = getFirestore();\r\n    const ordenCol = db.collection('ordenes');\r\n\r\n    let orden = {}\r\n\r\n    orden.date = firebase.firestore.Timestamp.fromDate(new Date());\r\n    orden.buyer = {\r\n        name: datos.name,\r\n        phone: datos.phone,\r\n        email: datos.email\r\n    }\r\n    orden.total = totalPrec\r\n    orden.items = cart.map(cartItem => {\r\n        const id = cartItem.item.id;\r\n        const nombre = cartItem.item.nombre;\r\n        const cantidad = cartItem.cantidad\r\n        const precio = cartItem.item.precio * cartItem.cantidad;\r\n\r\n        return { id, nombre, cantidad, precio }\r\n    })\r\n    ordenCol.add(orden)\r\n        .then((IdDocumento) => {\r\n            alert(IdDocumento.id)\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            console.log('termino la promesa')\r\n        })\r\n\r\n    const itemsToUpdate = db.collection('productos').where(\r\n        firebase.firestore.FieldPath.documentId(), 'in', cart.map(p => p.item.id)\r\n    )\r\n\r\n    const batch = db.batch();\r\n\r\n    itemsToUpdate.get().then(collection => {\r\n        collection.docs.forEach(docSnapshot => {\r\n            batch.update(docSnapshot.ref, {\r\n                stock: docSnapshot.data().stock - cart.find(item => item.item.id === docSnapshot.id).cantidad\r\n            })\r\n        })\r\n\r\n        batch.commit().then()\r\n    })\r\n}\r\n\r\n\r\nconst Formulario = (props) => {\r\n    const { cart, totalPrec } = useContext(CartContext)\r\n    const [datos, setDatos] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    })\r\n\r\n    const handleInputChange = (event) => {\r\n        setDatos({\r\n            ...datos,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"fontColor\">\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        <h4>Ingrese sus datos:</h4>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n\r\n                        <Form.Group controlId=\"formGridName\" >\r\n                            <Form.Label>Nombre y Apelido:</Form.Label>\r\n                            <Form.Control\r\n                                required={true}\r\n                                type=\"name\"\r\n                                placeholder=\"Name\"\r\n                                name='name'\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                required={true}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formGridPhone\">\r\n                            <Form.Label>Teléfono: </Form.Label>\r\n                            <Form.Control\r\n                                required={true}\r\n                                type=\"phone\"\r\n                                placeholder=\"Sin 0 (11) Sin 15 (12345678)\"\r\n                                name=\"phone\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"success\" onClick={() => { generarOrden(cart, totalPrec, datos); props.onHide(); }}>Confirmar</Button>\r\n                    <Button variant=\"danger\" onClick={props.onHide}>Cancelar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Formulario;\r\n/*  */","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CartContext } from '../../Context/CartContext';\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport \"./Cart.css\"\r\n\r\nimport 'firebase/firestore'\r\nimport Modal from '../modal/Modal'\r\nimport Formulario from '../modal/Modal';\r\n\r\n\r\n\r\nconst Cart = () => {\r\n    const { cart, removeItem, clear, totalCant, totalPrec } = useContext(CartContext)\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !cart.length ?\r\n                    <h2> No hay items en el carrito <Link to='/'> Ir al Home</Link></h2>\r\n                    : (<>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Producto</th>\r\n                                    <th>Precio</th>\r\n                                    <th>Cantidad</th>\r\n                                    <th>Subtotal</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cart.map(cartItem =>\r\n                                    <tr key={cartItem.item.id}>\r\n                                        <td> {cartItem.item.nombre} </td>\r\n                                        <td> {cartItem.item.precio}</td>\r\n                                        <td> {cartItem.cantidad} </td>\r\n                                        <td> {cartItem.cantidad * cartItem.item.precio}</td>\r\n                                        <td><Button variant=\"danger\" onClick={() => removeItem(cartItem.item.id)}> Quitar </Button></td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    <td colSpan=\"2\">Cantidad de Productos: {totalCant}</td>\r\n                                    <td colSpan=\"2\">TOTAL: {totalPrec}</td>\r\n                                    <td><Button variant=\"danger\" onClick={() => clear()}>Vaciar Carrito</Button></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Modal show={modalShow} onHide={() => setModalShow(false)}>\r\n                            <Formulario />\r\n                        </Modal>\r\n                        <Button variant=\"success\" onClick={() => setModalShow(true)}>Finalizar Compra</Button>\r\n\r\n                    </>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBar from '../navBar/navBar';\r\nimport ListContainer from '../../containers/ListContainer';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ItemDetailContainer from '../../containers/ItemDetailContainer';\r\nimport Cart from '../cart/Cart'\r\n\r\n\r\nfunction AppRouter() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <NavBar />\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <ListContainer />\r\n                    </Route>\r\n                    <Route path='/juegos/:itemParam'>\r\n                        <ListContainer />\r\n                    </Route>\r\n                    <Route path='/accesorios/:itemParam'>\r\n                        <ListContainer />\r\n                    </Route>\r\n                    <Route path='/itemDetail/:itemId'>\r\n                        <ItemDetailContainer />\r\n                    </Route>\r\n                    <Route path='/cart'>\r\n                        <Cart />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AppRouter from './components/AppRouter/AppRouter';\r\nimport { CartProvider } from './Context/CartContext';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <CartProvider>\r\n\r\n      <AppRouter />\r\n\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css'\n\nReactDOM.render(\n\n  <App />,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}